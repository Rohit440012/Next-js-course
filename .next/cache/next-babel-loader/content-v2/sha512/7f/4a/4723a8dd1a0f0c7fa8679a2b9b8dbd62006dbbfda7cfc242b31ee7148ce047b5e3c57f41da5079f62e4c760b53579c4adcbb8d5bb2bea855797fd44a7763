{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\udemy react\\\\NextJS\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nvar meetupDetails = function meetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    id: props.meetupData.id,\n    title: props.meetupData.title,\n    image: props.meetupData.image,\n    description: props.meetupData.description,\n    address: props.meetupData.address\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, _this);\n};\n\nexport var __N_SSG = true;\nexport default meetupDetails;","map":{"version":3,"sources":["D:/udemy react/NextJS/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","meetupDetails","props","meetupData","id","title","image","description","address"],"mappings":";;;;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,sBACE,QAAC,YAAD;AACE,IAAA,EAAE,EAAEA,KAAK,CAACC,UAAN,CAAiBC,EADvB;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KAH1B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI,WAJhC;AAKE,IAAA,OAAO,EAAEL,KAAK,CAACC,UAAN,CAAiBK;AAL5B;AAAA;AAAA;AAAA;AAAA,WADF;AASD,CAVD;;;AAiDA,eAAeP,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\n\r\nconst meetupDetails = (props) => {\r\n  return (\r\n    <MeetupDetail\r\n      id={props.meetupData.id}\r\n      title={props.meetupData.title}\r\n      image={props.meetupData.image}\r\n      description={props.meetupData.description}\r\n      address={props.meetupData.address}\r\n    />\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://9021764407:9021764407@cluster0.bsust.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupCollection.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://9021764407:9021764407@cluster0.bsust.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupCollection = db.collection(\"meetups\");\r\n  const meetup = await meetupCollection.findOne({ _id: ObjectId(meetupId) });\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: meetup._id,\r\n        title: meetup.title,\r\n        image: meetup.image,\r\n        description: meetup.description,\r\n        address: meetup.address,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default meetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}